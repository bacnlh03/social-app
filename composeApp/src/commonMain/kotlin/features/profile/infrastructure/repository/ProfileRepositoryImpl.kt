package features.profile.infrastructure.repositoryimport com.rickclephas.kmp.nativecoroutines.NativeCoroutinesimport features.profile.domain.model.ProfileModelimport features.profile.domain.repository.ProfileRepositoryimport features.profile.infrastructure.dataSource.ProfileRemoteDataSourceimport features.utils.DispatcherProviderimport kotlinx.coroutines.withContextclass ProfileRepositoryImpl(	private val dispatcher: DispatcherProvider,	private val remoteDataSource: ProfileRemoteDataSource) : ProfileRepository {	@NativeCoroutines	override suspend fun getProfile(uid: String): ProfileModel {		return withContext(dispatcher.io) {			remoteDataSource.getProfile(uid)		}	}	@NativeCoroutines	override suspend fun createProfile(profile: ProfileModel) {		withContext(dispatcher.io) {			remoteDataSource.createProfile(profile)		}	}}