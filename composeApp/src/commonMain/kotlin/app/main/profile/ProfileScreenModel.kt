package app.main.profileimport cafe.adriel.voyager.core.model.StateScreenModelimport cafe.adriel.voyager.core.model.screenModelScopeimport features.auth.domain.useCases.GetCurrentUidUseCaseimport features.profile.domain.useCases.GetProfileUseCaseimport kotlinx.coroutines.flow.updateimport kotlinx.coroutines.launchclass ProfileScreenModel(	private val getCurrentUidUseCase: GetCurrentUidUseCase,	private val getProfileUseCase: GetProfileUseCase) : StateScreenModel<ProfileState>(ProfileState()) {	init {		fetchProfile()	}	private fun fetchProfile() {		screenModelScope.launch {			try {				mutableState.update {					it.copy(						isLoading = true,						errorMessage = null					)				}				val uid = getCurrentUidUseCase()				val profile = getProfileUseCase(uid)				println(profile.toString())				mutableState.update {					it.copy(						avatarUrl = profile.avatarUrl,						username = profile.username,						posts = profile.posts,						followers = profile.followers,						following = profile.following,						isLoading = false,						isSuccess = true					)				}			} catch (e: Exception) {				mutableState.update {					it.copy(						isLoading = false,						isSuccess = false,						errorMessage = e.message					)				}				e.printStackTrace()			}		}	}}